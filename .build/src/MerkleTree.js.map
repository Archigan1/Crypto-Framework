{
  "version": 3,
  "sources": ["../../src/MerkleTree.ts"],
  "sourcesContent": ["import MerkleNode from \"./MerkleNode\";\nimport Transaction from \"./Transaction\";\nimport { getHash, makeRoot } from \"./utils\";\n\nclass MerkleTree {\n  root: MerkleNode;\n  size: number;\n  constructor(root: MerkleNode, size: number) {\n    this.root = root;\n    this.size = size;\n  }\n\n  static create(transactions: Array<Transaction>) {\n    const size = Math.ceil(Math.log2(transactions.length)) + 1;\n    const root = makeRoot(transactions.map((trn) => new MerkleNode(trn.hash)));\n    return new MerkleTree(root, size);\n  }\n\n  findSiblingOf(hash: string, node: MerkleNode | any = this.root): any {\n    if (node.value === hash) return { node };\n    if (!node.left && !node.right) return null;\n    if (node.left?.value === hash) return { node: node.right, left: false };\n    if (node.right?.value === hash) return { node: node.left, left: true };\n    return (\n      this.findSiblingOf(hash, node.left) ||\n      this.findSiblingOf(hash, node.right)\n    );\n  }\n\n  verify(transaction: Transaction) {\n    let hash = transaction.hash;\n    let sibling = this.findSiblingOf(hash);\n    while (sibling && sibling.node.value !== this.root.value) {\n      const val = sibling.left\n        ? sibling.node.value + hash\n        : hash + sibling.node.value;\n      hash = getHash(val);\n      sibling = this.findSiblingOf(hash);\n    }\n\n    return sibling && sibling.node.value === this.root.value ? true : false;\n  }\n}\n\nexport default MerkleTree;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAAuB;AAEvB,mBAAkC;AAElC,iBAAiB;AAAA,EAGf,YAAY,MAAkB,MAAc;AAC1C,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA;AAAA,SAGP,OAAO,cAAkC;AAC9C,UAAM,OAAO,KAAK,KAAK,KAAK,KAAK,aAAa,WAAW;AACzD,UAAM,OAAO,2BAAS,aAAa,IAAI,CAAC,QAAQ,IAAI,0BAAW,IAAI;AACnE,WAAO,IAAI,WAAW,MAAM;AAAA;AAAA,EAG9B,cAAc,MAAc,OAAyB,KAAK,MAAW;AAlBvE;AAmBI,QAAI,KAAK,UAAU;AAAM,aAAO,EAAE;AAClC,QAAI,CAAC,KAAK,QAAQ,CAAC,KAAK;AAAO,aAAO;AACtC,QAAI,YAAK,SAAL,mBAAW,WAAU;AAAM,aAAO,EAAE,MAAM,KAAK,OAAO,MAAM;AAChE,QAAI,YAAK,UAAL,mBAAY,WAAU;AAAM,aAAO,EAAE,MAAM,KAAK,MAAM,MAAM;AAChE,WACE,KAAK,cAAc,MAAM,KAAK,SAC9B,KAAK,cAAc,MAAM,KAAK;AAAA;AAAA,EAIlC,OAAO,aAA0B;AAC/B,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,KAAK,cAAc;AACjC,WAAO,WAAW,QAAQ,KAAK,UAAU,KAAK,KAAK,OAAO;AACxD,YAAM,MAAM,QAAQ,OAChB,QAAQ,KAAK,QAAQ,OACrB,OAAO,QAAQ,KAAK;AACxB,aAAO,0BAAQ;AACf,gBAAU,KAAK,cAAc;AAAA;AAG/B,WAAO,WAAW,QAAQ,KAAK,UAAU,KAAK,KAAK,QAAQ,OAAO;AAAA;AAAA;AAItE,IAAO,qBAAQ;",
  "names": []
}
