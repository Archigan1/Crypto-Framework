{
  "version": 3,
  "sources": ["../../src/Transaction.ts"],
  "sourcesContent": ["import { v4 as uuidv4 } from \"uuid\";\nimport { createHash, createSign, createVerify } from \"crypto\";\nimport NETWORK_WALLET from \"./NETWORK_WALLET\";\nimport Wallet from \"./Wallet\";\nimport Chain from \"./Chain\";\n\nclass Transaction {\n  id: string;\n  sender: string;\n  receiver: string;\n  amount: number;\n  hash: string;\n  signature: string;\n  constructor(senderPubKey: string, receiverPubKey: string, amount: number) {\n    const id = uuidv4();\n    const data = senderPubKey + receiverPubKey + amount + id;\n    const hash = createHash(\"sha256\").update(data).digest(\"hex\");\n    this.id = id;\n    this.sender = senderPubKey;\n    this.receiver = receiverPubKey;\n    this.amount = amount;\n    this.hash = hash;\n    this.signature = \"\";\n  }\n\n  sign(wallet: Wallet) {\n    if (wallet.publicKey === this.sender) {\n      const shaSign = createSign(\"sha256\");\n      shaSign.update(this.hash).end();\n      this.signature = shaSign.sign(wallet.privateKey).toString(\"base64\");\n    }\n  }\n\n  isValid(chain: Chain) {\n    const sig = Buffer.from(this.signature, \"base64\");\n    const verify = createVerify(\"sha256\");\n    verify.update(this.hash);\n    const isVerified = verify.verify(this.sender, sig);\n\n    const data = this.sender + this.receiver + this.amount + this.id;\n    const hash = createHash(\"sha256\").update(data).digest(\"hex\");\n\n    return (\n      this.sender &&\n      this.receiver &&\n      this.amount &&\n      (chain.getBalance(this.sender) >= this.amount ||\n        this.sender === NETWORK_WALLET.publicKey) &&\n      this.hash === hash &&\n      isVerified\n    );\n  }\n}\n\nexport default Transaction;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,kBAA6B;AAC7B,oBAAqD;AACrD,4BAA2B;AAI3B,kBAAkB;AAAA,EAOhB,YAAY,cAAsB,gBAAwB,QAAgB;AACxE,UAAM,KAAK;AACX,UAAM,OAAO,eAAe,iBAAiB,SAAS;AACtD,UAAM,OAAO,8BAAW,UAAU,OAAO,MAAM,OAAO;AACtD,SAAK,KAAK;AACV,SAAK,SAAS;AACd,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,SAAK,OAAO;AACZ,SAAK,YAAY;AAAA;AAAA,EAGnB,KAAK,QAAgB;AACnB,QAAI,OAAO,cAAc,KAAK,QAAQ;AACpC,YAAM,UAAU,8BAAW;AAC3B,cAAQ,OAAO,KAAK,MAAM;AAC1B,WAAK,YAAY,QAAQ,KAAK,OAAO,YAAY,SAAS;AAAA;AAAA;AAAA,EAI9D,QAAQ,OAAc;AACpB,UAAM,MAAM,OAAO,KAAK,KAAK,WAAW;AACxC,UAAM,SAAS,gCAAa;AAC5B,WAAO,OAAO,KAAK;AACnB,UAAM,aAAa,OAAO,OAAO,KAAK,QAAQ;AAE9C,UAAM,OAAO,KAAK,SAAS,KAAK,WAAW,KAAK,SAAS,KAAK;AAC9D,UAAM,OAAO,8BAAW,UAAU,OAAO,MAAM,OAAO;AAEtD,WACE,KAAK,UACL,KAAK,YACL,KAAK,UACJ,OAAM,WAAW,KAAK,WAAW,KAAK,UACrC,KAAK,WAAW,8BAAe,cACjC,KAAK,SAAS,QACd;AAAA;AAAA;AAKN,IAAO,sBAAQ;",
  "names": []
}
